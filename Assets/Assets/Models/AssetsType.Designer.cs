
//AssetsType.\designer.cs

//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace Assets.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AssetManagementNewEntities3 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AssetManagementNewEntities3 object using the connection string found in the 'AssetManagementNewEntities3' section of the application configuration file.
        /// </summary>
        public AssetManagementNewEntities3() : base("name=AssetManagementNewEntities3", "AssetManagementNewEntities3")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AssetManagementNewEntities3 object.
        /// </summary>
        public AssetManagementNewEntities3(string connectionString) : base(connectionString, "AssetManagementNewEntities3")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AssetManagementNewEntities3 object.
        /// </summary>
        public AssetManagementNewEntities3(EntityConnection connection) : base(connection, "AssetManagementNewEntities3")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssetType> AssetTypes
        {
            get
            {
                if ((_AssetTypes == null))
                {
                    _AssetTypes = base.CreateObjectSet<AssetType>("AssetTypes");
                }
                return _AssetTypes;
            }
        }
        private ObjectSet<AssetType> _AssetTypes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssetTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssetTypes(AssetType assetType)
        {
            base.AddObject("AssetTypes", assetType);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AssetManagementNewModel3", Name="AssetType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssetType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssetType object.
        /// </summary>
        /// <param name="assetTypeID">Initial value of the AssetTypeID property.</param>
        /// <param name="assetType1">Initial value of the AssetType1 property.</param>
        public static AssetType CreateAssetType(global::System.String assetTypeID, global::System.String assetType1)
        {
            AssetType assetType = new AssetType();
            assetType.AssetTypeID = assetTypeID;
            assetType.AssetType1 = assetType1;
            return assetType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AssetTypeID
        {
            get
            {
                return _AssetTypeID;
            }
            set
            {
                if (_AssetTypeID != value)
                {
                    OnAssetTypeIDChanging(value);
                    ReportPropertyChanging("AssetTypeID");
                    _AssetTypeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AssetTypeID");
                    OnAssetTypeIDChanged();
                }
            }
        }
        private global::System.String _AssetTypeID;
        partial void OnAssetTypeIDChanging(global::System.String value);
        partial void OnAssetTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AssetType1
        {
            get
            {
                return _AssetType1;
            }
            set
            {
                OnAssetType1Changing(value);
                ReportPropertyChanging("AssetType1");
                _AssetType1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AssetType1");
                OnAssetType1Changed();
            }
        }
        private global::System.String _AssetType1;
        partial void OnAssetType1Changing(global::System.String value);
        partial void OnAssetType1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }

    #endregion

    
}
