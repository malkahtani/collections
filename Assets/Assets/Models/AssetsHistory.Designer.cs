//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace Assets.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AssetManagementNewEntities1 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AssetManagementNewEntities1 object using the connection string found in the 'AssetManagementNewEntities1' section of the application configuration file.
        /// </summary>
        public AssetManagementNewEntities1() : base("name=AssetManagementNewEntities1", "AssetManagementNewEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AssetManagementNewEntities1 object.
        /// </summary>
        public AssetManagementNewEntities1(string connectionString) : base(connectionString, "AssetManagementNewEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AssetManagementNewEntities1 object.
        /// </summary>
        public AssetManagementNewEntities1(EntityConnection connection) : base(connection, "AssetManagementNewEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssetHistory> AssetHistories
        {
            get
            {
                if ((_AssetHistories == null))
                {
                    _AssetHistories = base.CreateObjectSet<AssetHistory>("AssetHistories");
                }
                return _AssetHistories;
            }
        }
        private ObjectSet<AssetHistory> _AssetHistories;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssetHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssetHistories(AssetHistory assetHistory)
        {
            base.AddObject("AssetHistories", assetHistory);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AssetManagementNewModel1", Name="AssetHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssetHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssetHistory object.
        /// </summary>
        /// <param name="labelID">Initial value of the LabelID property.</param>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        /// <param name="iTRID">Initial value of the ITRID property.</param>
        /// <param name="replacement">Initial value of the Replacement property.</param>
        /// <param name="assetType">Initial value of the AssetType property.</param>
        /// <param name="authorizedBy">Initial value of the AuthorizedBy property.</param>
        /// <param name="ownerName">Initial value of the OwnerName property.</param>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="ownerState">Initial value of the OwnerState property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        public static AssetHistory CreateAssetHistory(global::System.String labelID, global::System.String locationID, global::System.String iTRID, global::System.Boolean replacement, global::System.String assetType, global::System.String authorizedBy, global::System.String ownerName, global::System.String employeeID, global::System.Boolean ownerState, global::System.DateTime timeStamp)
        {
            AssetHistory assetHistory = new AssetHistory();
            assetHistory.LabelID = labelID;
            assetHistory.LocationID = locationID;
            assetHistory.ITRID = iTRID;
            assetHistory.Replacement = replacement;
            assetHistory.AssetType = assetType;
            assetHistory.AuthorizedBy = authorizedBy;
            assetHistory.OwnerName = ownerName;
            assetHistory.EmployeeID = employeeID;
            assetHistory.OwnerState = ownerState;
            assetHistory.TimeStamp = timeStamp;
            return assetHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LabelID
        {
            get
            {
                return _LabelID;
            }
            set
            {
                if (_LabelID != value)
                {
                    OnLabelIDChanging(value);
                    ReportPropertyChanging("LabelID");
                    _LabelID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LabelID");
                    OnLabelIDChanged();
                }
            }
        }
        private global::System.String _LabelID;
        partial void OnLabelIDChanging(global::System.String value);
        partial void OnLabelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                OnLocationIDChanging(value);
                ReportPropertyChanging("LocationID");
                _LocationID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LocationID");
                OnLocationIDChanged();
            }
        }
        private global::System.String _LocationID;
        partial void OnLocationIDChanging(global::System.String value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ITRID
        {
            get
            {
                return _ITRID;
            }
            set
            {
                OnITRIDChanging(value);
                ReportPropertyChanging("ITRID");
                _ITRID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ITRID");
                OnITRIDChanged();
            }
        }
        private global::System.String _ITRID;
        partial void OnITRIDChanging(global::System.String value);
        partial void OnITRIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Replacement
        {
            get
            {
                return _Replacement;
            }
            set
            {
                OnReplacementChanging(value);
                ReportPropertyChanging("Replacement");
                _Replacement = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Replacement");
                OnReplacementChanged();
            }
        }
        private global::System.Boolean _Replacement;
        partial void OnReplacementChanging(global::System.Boolean value);
        partial void OnReplacementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AssetType
        {
            get
            {
                return _AssetType;
            }
            set
            {
                OnAssetTypeChanging(value);
                ReportPropertyChanging("AssetType");
                _AssetType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AssetType");
                OnAssetTypeChanged();
            }
        }
        private global::System.String _AssetType;
        partial void OnAssetTypeChanging(global::System.String value);
        partial void OnAssetTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AuthorizedBy
        {
            get
            {
                return _AuthorizedBy;
            }
            set
            {
                OnAuthorizedByChanging(value);
                ReportPropertyChanging("AuthorizedBy");
                _AuthorizedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AuthorizedBy");
                OnAuthorizedByChanged();
            }
        }
        private global::System.String _AuthorizedBy;
        partial void OnAuthorizedByChanging(global::System.String value);
        partial void OnAuthorizedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OwnerName
        {
            get
            {
                return _OwnerName;
            }
            set
            {
                OnOwnerNameChanging(value);
                ReportPropertyChanging("OwnerName");
                _OwnerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OwnerName");
                OnOwnerNameChanged();
            }
        }
        private global::System.String _OwnerName;
        partial void OnOwnerNameChanging(global::System.String value);
        partial void OnOwnerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.String _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.String value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean OwnerState
        {
            get
            {
                return _OwnerState;
            }
            set
            {
                OnOwnerStateChanging(value);
                ReportPropertyChanging("OwnerState");
                _OwnerState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerState");
                OnOwnerStateChanged();
            }
        }
        private global::System.Boolean _OwnerState;
        partial void OnOwnerStateChanging(global::System.Boolean value);
        partial void OnOwnerStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeStamp
        {
            get
            {
                return _TimeStamp;
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.DateTime _TimeStamp;
        partial void OnTimeStampChanging(global::System.DateTime value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }

    #endregion

    
}
