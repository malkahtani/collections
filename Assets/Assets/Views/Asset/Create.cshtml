@model Assets.Models.Asset

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Asset</legend>
           <div class="editor-label">
            @Html.LabelFor(model => model.LabelID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LabelID)
            @Html.ValidationMessageFor(model => model.LabelID)
        </div>


        <div class="editor-label">
            @Html.LabelFor(model => model.EmployeeID)
        </div>
        <div>
        @Html.DropDownList("EmployeeID", (SelectList)ViewBag.EmployeeID, "--Select One--") 
        </div>
    
        <div class="editor-label">
            @Html.LabelFor(model => model.AssetTypeID)
        </div>
        <div class="editor-field">
            @Html.DropDownList("AssetTypeID", (SelectList)ViewBag.AssetTypeID, "--Select One--")
           
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.LocationID)
        </div>
        <div class="editor-field">
            @Html.DropDownList("LocationID", (SelectList)ViewBag.LocationID, "--Select One--")
           
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ITRID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ITRID)
            @Html.ValidationMessageFor(model => model.ITRID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Replacement)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Replacement)
            @Html.ValidationMessageFor(model => model.Replacement)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SerialNo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SerialNo)
            @Html.ValidationMessageFor(model => model.SerialNo)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.OS)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.OS)
            @Html.ValidationMessageFor(model => model.OS)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Windows_Key)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Windows_Key)
            @Html.ValidationMessageFor(model => model.Windows_Key)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProductNo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ProductNo)
            @Html.ValidationMessageFor(model => model.ProductNo)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Model)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Model)
            @Html.ValidationMessageFor(model => model.Model)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TimeStamp)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TimeStamp)
            @Html.ValidationMessageFor(model => model.TimeStamp)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.History)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.History)
            @Html.ValidationMessageFor(model => model.History)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
