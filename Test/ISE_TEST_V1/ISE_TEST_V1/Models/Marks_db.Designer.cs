//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace ISE_TEST_V1.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Marks_dbEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Marks_dbEntities object using the connection string found in the 'Marks_dbEntities' section of the application configuration file.
        /// </summary>
        public Marks_dbEntities() : base("name=Marks_dbEntities", "Marks_dbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Marks_dbEntities object.
        /// </summary>
        public Marks_dbEntities(string connectionString) : base(connectionString, "Marks_dbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Marks_dbEntities object.
        /// </summary>
        public Marks_dbEntities(EntityConnection connection) : base(connection, "Marks_dbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Mark> Marks
        {
            get
            {
                if ((_Marks == null))
                {
                    _Marks = base.CreateObjectSet<Mark>("Marks");
                }
                return _Marks;
            }
        }
        private ObjectSet<Mark> _Marks;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Marks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMarks(Mark mark)
        {
            base.AddObject("Marks", mark);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISE_TEST_1Model9", Name="Mark")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Mark : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Mark object.
        /// </summary>
        /// <param name="c_T_R_ID">Initial value of the C_T_R_ID property.</param>
        /// <param name="q_ID">Initial value of the Q_ID property.</param>
        /// <param name="user_Mark">Initial value of the User_Mark property.</param>
        /// <param name="aL_ID">Initial value of the AL_ID property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        public static Mark CreateMark(global::System.Int32 c_T_R_ID, global::System.Int32 q_ID, global::System.Int32 user_Mark, global::System.Int32 aL_ID, global::System.Int32 id)
        {
            Mark mark = new Mark();
            mark.C_T_R_ID = c_T_R_ID;
            mark.Q_ID = q_ID;
            mark.User_Mark = user_Mark;
            mark.AL_ID = aL_ID;
            mark.ID = id;
            return mark;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 C_T_R_ID
        {
            get
            {
                return _C_T_R_ID;
            }
            set
            {
                OnC_T_R_IDChanging(value);
                ReportPropertyChanging("C_T_R_ID");
                _C_T_R_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("C_T_R_ID");
                OnC_T_R_IDChanged();
            }
        }
        private global::System.Int32 _C_T_R_ID;
        partial void OnC_T_R_IDChanging(global::System.Int32 value);
        partial void OnC_T_R_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Q_ID
        {
            get
            {
                return _Q_ID;
            }
            set
            {
                OnQ_IDChanging(value);
                ReportPropertyChanging("Q_ID");
                _Q_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Q_ID");
                OnQ_IDChanged();
            }
        }
        private global::System.Int32 _Q_ID;
        partial void OnQ_IDChanging(global::System.Int32 value);
        partial void OnQ_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 User_Mark
        {
            get
            {
                return _User_Mark;
            }
            set
            {
                OnUser_MarkChanging(value);
                ReportPropertyChanging("User_Mark");
                _User_Mark = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("User_Mark");
                OnUser_MarkChanged();
            }
        }
        private global::System.Int32 _User_Mark;
        partial void OnUser_MarkChanging(global::System.Int32 value);
        partial void OnUser_MarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AL_ID
        {
            get
            {
                return _AL_ID;
            }
            set
            {
                OnAL_IDChanging(value);
                ReportPropertyChanging("AL_ID");
                _AL_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AL_ID");
                OnAL_IDChanged();
            }
        }
        private global::System.Int32 _AL_ID;
        partial void OnAL_IDChanging(global::System.Int32 value);
        partial void OnAL_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        #endregion
    
    }

    #endregion
    
}
